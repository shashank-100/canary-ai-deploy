apiVersion: v1
kind: ConfigMap
metadata:
  name: model-serving-config
  namespace: ai-models
data:
  # Model serving configuration
  MODEL_CACHE_SIZE: "1000"
  MODEL_BATCH_SIZE: "32"
  MODEL_TIMEOUT: "30"
  PROMETHEUS_PORT: "8080"
  HEALTH_CHECK_INTERVAL: "30"
  
  # Logging configuration
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  
  # Performance tuning
  WORKERS: "4"
  MAX_REQUESTS: "1000"
  MAX_REQUESTS_JITTER: "100"
  
  # Feature flags
  ENABLE_SHADOW_MODE: "true"
  ENABLE_DRIFT_DETECTION: "true"
  ENABLE_METRICS: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: model-endpoints-config
  namespace: ai-models
data:
  endpoints.yaml: |
    models:
      bert-ner:
        name: "BERT Named Entity Recognition"
        version: "v1.0.0"
        path: "/models/bert-ner"
        framework: "pytorch"
        input_schema:
          type: "object"
          properties:
            text:
              type: "string"
              maxLength: 512
        output_schema:
          type: "array"
          items:
            type: "object"
            properties:
              entity:
                type: "string"
              label:
                type: "string"
              confidence:
                type: "number"
        resources:
          cpu: "500m"
          memory: "1Gi"
          gpu: 0
        scaling:
          min_replicas: 1
          max_replicas: 10
          target_cpu: 70
      
      resnet-classifier:
        name: "ResNet Image Classifier"
        version: "v1.0.0"
        path: "/models/resnet-classifier"
        framework: "pytorch"
        input_schema:
          type: "object"
          properties:
            image:
              type: "string"
              format: "base64"
        output_schema:
          type: "object"
          properties:
            predictions:
              type: "array"
              items:
                type: "object"
                properties:
                  class:
                    type: "string"
                  confidence:
                    type: "number"
        resources:
          cpu: "1000m"
          memory: "2Gi"
          gpu: 1
        scaling:
          min_replicas: 0
          max_replicas: 5
          target_cpu: 80

