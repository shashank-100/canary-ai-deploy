# Loki Stack Helm Chart Values for AI Model Serving Platform

# Loki configuration
loki:
  enabled: true
  
  # Resource configuration
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  
  # Persistence
  persistence:
    enabled: true
    storageClassName: gp3
    size: 20Gi
  
  # Loki configuration
  config:
    auth_enabled: false
    
    server:
      http_listen_port: 3100
      grpc_listen_port: 9096
    
    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory
    
    query_scheduler:
      max_outstanding_requests_per_tenant: 32768
    
    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h
    
    ruler:
      alertmanager_url: http://prometheus-kube-prometheus-alertmanager:9093
    
    # Limits configuration
    limits_config:
      enforce_metric_name: false
      reject_old_samples: true
      reject_old_samples_max_age: 168h
      max_cache_freshness_per_query: 10m
      split_queries_by_interval: 15m
      ingestion_rate_mb: 8
      ingestion_burst_size_mb: 16
      max_streams_per_user: 10000
      max_line_size: 256000
      max_entries_limit_per_query: 5000
      max_global_streams_per_user: 5000
      unordered_writes: true
    
    # Table manager
    table_manager:
      retention_deletes_enabled: true
      retention_period: 336h  # 14 days
    
    # Compactor
    compactor:
      working_directory: /loki/boltdb-shipper-compactor
      shared_store: filesystem
      compaction_interval: 10m
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 150

# Promtail configuration
promtail:
  enabled: true
  
  # Resource configuration
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "200m"
  
  # Promtail configuration
  config:
    server:
      http_listen_port: 3101
      grpc_listen_port: 9096
    
    clients:
      - url: http://loki:3100/loki/api/v1/push
    
    positions:
      filename: /tmp/positions.yaml
    
    scrape_configs:
      # Kubernetes pods
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_instance
              - __meta_kubernetes_pod_label_release
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: instance
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - namespace
            - app
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            regex: true/(.*)
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
            - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
            - __meta_kubernetes_pod_container_name
            target_label: __path__
        
        # Pipeline stages for log processing
        pipeline_stages:
          - cri: {}
          - regex:
              expression: '^(?P<timestamp>\S+) (?P<stream>\S+) (?P<flags>\S+) (?P<content>.*)$'
          - timestamp:
              source: timestamp
              format: RFC3339Nano
          - labels:
              stream:
          - match:
              selector: '{app="model-server"}'
              stages:
                - regex:
                    expression: '.*level=(?P<level>\w+).*msg="(?P<message>.*?)".*'
                - labels:
                    level:
                - template:
                    source: message
                    template: '{{ .message }}'
          - match:
              selector: '{app="drift-detector"}'
              stages:
                - regex:
                    expression: '.*\[(?P<level>\w+)\].*(?P<message>.*)'
                - labels:
                    level:
      
      # System logs
      - job_name: kubernetes-system
        static_configs:
          - targets:
              - localhost
            labels:
              job: kubernetes-system
              __path__: /var/log/syslog
        
        pipeline_stages:
          - regex:
              expression: '^(?P<timestamp>\S+ \S+) (?P<hostname>\S+) (?P<service>\S+).*: (?P<message>.*)$'
          - timestamp:
              source: timestamp
              format: Jan 02 15:04:05
          - labels:
              hostname:
              service:

# Fluent Bit configuration (alternative to Promtail)
fluent-bit:
  enabled: false

# Grafana configuration (if not using external Grafana)
grafana:
  enabled: false
  sidecar:
    datasources:
      enabled: true
      maxLines: 1000

# Prometheus configuration (if not using external Prometheus)
prometheus:
  enabled: false

# Filebeat configuration (alternative log shipper)
filebeat:
  enabled: false

# Logstash configuration (for log processing)
logstash:
  enabled: false

